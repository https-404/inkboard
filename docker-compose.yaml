services:
  # FastAPI Application (commented out - uncomment when ready to use)
  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: inkboard-app
  #   restart: always
  #   environment:
  #     DATABASE_URL: postgresql+asyncpg://inkboardadmin:inkboardadmin123@postgres:5432/inkboarddb
  #     MINIO_ENDPOINT: http://minio:9000
  #     SERVER_URL: http://localhost:8000
  #     # Add other environment variables from .env as needed
  #   ports:
  #     - '8000:8000'
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     minio:
  #       condition: service_started
  #   volumes:
  #     - ./app:/app/app  # Mount app directory for development (optional)
  #   networks:
  #     - inkboard-network

  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: inkboardadmin
      POSTGRES_PASSWORD: inkboardadmin123
      POSTGRES_DB: inkboarddb
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U inkboardadmin -d inkboarddb"]
      interval: 10s
      timeout: 5s
      retries: 5
    # networks:
    #   - inkboard-network

  minio:
    image: minio/minio:latest
    restart: always
    environment:
      MINIO_ROOT_USER: inkboardadmin
      MINIO_ROOT_PASSWORD: inkboardadmin123
    command: server /data --console-address ":9001"
    ports:
      - '9000:9000'   # S3 API
      - '9001:9001'   # Web UI
    volumes:
      - minio-data:/data
    # networks:
    #   - inkboard-network

  minio-init:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      sh -c "
      sleep 5 &&
      mc alias set local http://minio:9000 inkboardadmin inkboardadmin123 &&
      mc mb -p local/inkboard-media || true &&
      mc anonymous set public local/inkboard-media
      "

volumes:
  pgdata:
  minio-data:

# Uncomment when using app service
# networks:
#   inkboard-network:
#     driver: bridge